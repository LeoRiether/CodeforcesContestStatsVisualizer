{"version":3,"sources":["api.ts","index.ts"],"names":[],"mappings":"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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["\nconst api_base = 'https://codeforces.com/api';\n\nexport interface StrDict {\n    [key:string]: string;\n}\n\nexport interface Creds {\n    key: string;\n    secret: string;\n}\n\nconst rand_hex = () =>\n    (~~(Math.random() * 16)).toString(16);\n\nconst sha512 : (str: string) => Promise<string> = str =>\n  crypto.subtle.digest(\"SHA-512\", new TextEncoder().encode(str))\n  .then(buf =>\n    Array.prototype.map.call(new Uint8Array(buf), (x:number)=>(('00'+x.toString(16)).slice(-2))).join(''));\n\nasync function api_sig(request_base: string, secret: string): Promise<string> {\n    const rand = new Array(6).fill(null).map(rand_hex).join('');\n    const thingy = `${rand}/${request_base}#${secret}`;\n    return rand + (await sha512(thingy));\n}\n\nasync function request(creds: Creds, method: string, params: StrDict): Promise<any> {\n    params['time'] = (~~(new Date().getTime() / 1000)).toString();\n    params['apiKey'] = creds.key;\n\n    let param_list = Object.entries(params);\n    param_list.sort(); // This might work\n\n    const request_base = method + '?' + param_list.map(([key, value]) => `${key}=${value}`).join('&');\n    const signature = await api_sig(request_base, creds.secret);\n    const request_url = `${api_base}/${request_base}&apiSig=${signature}`;\n\n    const response = await fetch(request_url).then(res => res.json());\n    if (response['status'] != 'OK')\n        throw `The Codeforces API returned status ${response['status']}. Full response: ${JSON.stringify(response)}`;\n\n    return response['result'];\n}\n\nexport function contest_status(creds: Creds, contestId: string): Promise<StrDict> {\n    return request(creds, 'contest.status', { contestId });\n}","import * as api from './api';\nasync function main() {\n    if (localStorage.getItem('cf_key') === null || localStorage.getItem('cf_secret') === null) {\n        localStorage.setItem('cf_key', prompt('Your API key'));\n        localStorage.setItem('cf_secret', prompt('Your API secret'));\n    }\n\n    // Yeah, an extension or userscript could easily get hold of these\n    let creds: api.Creds = {\n        key: localStorage.getItem('cf_key'),\n        secret: localStorage.getItem('cf_secret'),\n    };\n\n    let res = await api.contest_status(creds, '329742');\n    document.write(JSON.stringify(res));\n}\n\nmain();\n\n\n"]}